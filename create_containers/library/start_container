#!/usr/bin/python

import re
import os
from ansible.module_utils.basic import *

CMD01 = 'docker run --hostname="%(name)s" --name="%(name)s" --net="none" -i -t -d %(image)s /bin/bash'
CMD02 = 'docker inspect --format {{.State.Pid}} %(id)s'
CMD03 = 'ln -s /proc/%(pid)s/ns/net /var/run/netns/%(pid)s'
CMD04 = 'ip link add %(bif)s type veth peer name %(cif)s'
CMD05 = 'ip link set %(bif)s up'
CMD06 = 'ovs-vsctl add-port %(bridge)s %(bif)s'
CMD07 = 'ip link set %(cif)s netns %(pid)s'
CMD08 = 'ip netns exec %(pid)s ip link set dev %(cif)s address %(mac)s'
CMD09 = 'ip netns exec %(pid)s ip addr add %(ip_addr)s/%(nw_mask)s dev %(cif)s'
CMD10 = 'ip netns exec %(pid)s ip link set %(cif)s up'

def command(cmd):
  (rc, out, err) = module.run_command(cmd)
  if rc != 0:
    raise Exception, err
  return out

def get_bridge():
  out = command("ovs-vsctl show")
  return re.search(r'.*Bridge "(\w+)".*', out).group(1)

def main():
  try:
    name   = module.params['container']['name']
    ipaddr = module.params['container']['ip_addr']
    mac    = module.params['container']['mac_addr']
    bif    = module.params['container']['bridge_if']
    cif    = module.params['container']['container_if']
    image  = module.params['image']
    mask   = module.params['network']['nw_mask']

    bridge = get_bridge()

    id = command(CMD01 % {"name": name, "image": image}).rstrip()
    pid = command(CMD02 % {"id": id}).rstrip()

    if not os.path.exists("/var/run/netns"):
      os.mkdir("/var/run/netns")

    command(CMD03 % {"pid": pid})
    command(CMD04 % {"bif": bif, "cif": cif})
    command(CMD05 % {"bif": bif})
    command(CMD06 % {"bridge": bridge, "bif": bif})
    command(CMD07 % {"cif": cif, "pid": pid})
    command(CMD08 % {"pid": pid, "cif": cif, "mac": mac})
    command(CMD09 % {"pid": pid, "ip_addr": ipaddr, "nw_mask": mask, "cif": cif})
    command(CMD10 % {"pid": pid, "cif": cif})

    with open(module.params['cfile'],'a') as cfile:
      cfile.write('%s,%s,%s,%s\n' % (id, pid, bif, cif))

    module.exit_json(changed=True, rc=0)

  except Exception, err:
    module.fail_json(msg='%s' % err.message)

module = AnsibleModule(
  argument_spec=dict(
    image=dict(default=None, required=True),
    cfile=dict(default=None, required=True),
    network=dict(type='dict', default=None, required=True),
    container=dict(type='dict', default=None, required=True),
  ),
)

main()
